declare type HttpRequest = {
    path?: string[];
    /**
     * Request body will be serialized to json
     */
    body?: unknown;
};
declare type UpstashResponse<TResult> = {
    result?: TResult;
    error?: string;
};
declare type HttpClientConfig = {
    headers?: Record<string, string>;
    baseUrl: string;
    options?: {
        backend?: string;
    };
};
declare class HttpClient {
    baseUrl: string;
    headers: Record<string, string>;
    readonly options?: {
        backend?: string;
    };
    constructor(config: HttpClientConfig);
    request<TResponse>(req: HttpRequest): Promise<TResponse>;
}

export { HttpClient, HttpClientConfig, HttpRequest, UpstashResponse };
