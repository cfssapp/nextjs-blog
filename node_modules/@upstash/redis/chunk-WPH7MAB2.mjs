import {
  Redis
} from "./chunk-2EIGUPGW.mjs";
import {
  HttpClient
} from "./chunk-HIDCSH5S.mjs";

// pkg/nodejs.ts
import "isomorphic-fetch";
var Redis2 = class extends Redis {
  constructor(config) {
    const client = new HttpClient({
      baseUrl: config.url,
      headers: {
        authorization: `Bearer ${config.token}`
      }
    });
    super(client);
  }
  static fromEnv() {
    if (typeof (process == null ? void 0 : process.env) === "undefined") {
      throw new Error("Unable to get environment variables, `process.env` is undefined. If you are deploying to cloudflare, please use `Redis.onCloudflare()` instead");
    }
    const url = process.env["UPSTASH_REDIS_REST_URL"];
    if (!url) {
      throw new Error("Unable to find environment variable: `UPSTASH_REDIS_REST_URL`");
    }
    const token = process.env["UPSTASH_REDIS_REST_TOKEN"];
    if (!token) {
      throw new Error("Unable to find environment variable: `UPSTASH_REDIS_REST_TOKEN`");
    }
    return new Redis2({ url, token });
  }
};

export {
  Redis2 as Redis
};
