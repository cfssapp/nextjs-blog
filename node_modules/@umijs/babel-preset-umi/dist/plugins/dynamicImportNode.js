"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const template_1 = __importDefault(require("@umijs/bundler-utils/compiled/babel/template"));
const t = __importStar(require("@umijs/bundler-utils/compiled/babel/types"));
function getImportSource(callNode) {
    // @ts-ignore
    const importArguments = callNode.arguments;
    const [importPath] = importArguments;
    const isString = t.isStringLiteral(importPath) || t.isTemplateLiteral(importPath);
    if (isString) {
        t.removeComments(importPath);
        return importPath;
    }
    return t.templateLiteral([
        t.templateElement({ raw: '', cooked: '' }),
        t.templateElement({ raw: '', cooked: '' }, true),
    ], importArguments);
}
const builders = {
    static: (0, template_1.default)('Promise.resolve().then(() => INTEROP(require(SOURCE)))'),
    dynamic: (0, template_1.default)('Promise.resolve(SOURCE).then(s => INTEROP(require(s)))'),
};
function isString(node) {
    return (t.isStringLiteral(node) ||
        (t.isTemplateLiteral(node) && node.expressions.length === 0));
}
exports.default = () => {
    const visited = new WeakSet();
    return {
        visitor: {
            Import(path) {
                if (visited) {
                    if (visited.has(path)) {
                        return;
                    }
                    visited.add(path);
                }
                const SOURCE = getImportSource(path.parent);
                const builder = isString(SOURCE) ? builders.static : builders.dynamic;
                const newImport = builder({
                    SOURCE,
                    INTEROP: path.hub.addHelper('interopRequireWildcard'),
                });
                // @ts-ignore
                path.parentPath.replaceWith(newImport);
            },
        },
    };
};
