"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
const esbuild_1 = require("@umijs/bundler-utils/compiled/esbuild");
const utils_1 = require("@umijs/utils");
const path_1 = require("path");
const alias_1 = __importDefault(require("./plugins/alias"));
const externals_1 = __importDefault(require("./plugins/externals"));
const less_1 = __importDefault(require("./plugins/less"));
const style_1 = require("./plugins/style");
function build(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const outputPath = opts.config.outputPath || (0, path_1.join)(opts.cwd, 'dist');
        if (opts.clean) {
            utils_1.rimraf.sync(outputPath);
        }
        return yield (0, esbuild_1.build)({
            entryPoints: opts.entry,
            bundle: true,
            format: opts.format || 'iife',
            logLevel: 'error',
            // splitting: true,
            sourcemap: opts.sourcemap,
            outdir: outputPath,
            metafile: true,
            plugins: [
                (0, less_1.default)(Object.assign({ modifyVars: opts.config.theme, javascriptEnabled: true, alias: opts.config.alias, 
                    // ref: https://github.com/umijs/umi-next/pull/214
                    inlineStyle: opts.inlineStyle, config: opts.config }, opts.config.lessLoader)),
                opts.config.alias && (0, alias_1.default)(addCwdPrefix(opts.config.alias, opts.cwd)),
                opts.config.externals && (0, externals_1.default)(opts.config.externals),
                (0, style_1.style)({
                    inlineStyle: opts.inlineStyle,
                    config: opts.config,
                }),
            ].filter(Boolean),
            define: Object.assign({ 
                // __dirname sham
                __dirname: JSON.stringify('__dirname'), 'process.env.NODE_ENV': JSON.stringify(opts.mode || 'development') }, opts.config.define),
            loader: {
                '.svg': 'dataurl',
                '.ttf': 'dataurl',
            },
        });
    });
}
exports.build = build;
// TODO: move to api.describe({ config: { format } })
function addCwdPrefix(obj, cwd) {
    Object.keys(obj).forEach((key) => {
        if (obj[key].startsWith('.')) {
            obj[key] = (0, utils_1.winPath)((0, path_1.join)(cwd, obj[key]));
        }
    });
    return obj;
}
