"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@umijs/core");
const utils_1 = require("@umijs/utils");
const assert_1 = __importDefault(require("assert"));
const fs_1 = require("fs");
const path_1 = require("path");
exports.default = (api) => {
    api.registerGenerator({
        key: 'prettier',
        name: 'Enable Prettier',
        description: 'Enable Prettier',
        type: core_1.GeneratorType.enable,
        checkEnable: (opts) => {
            const { api } = opts;
            // 存在 .prettierrc，不开启
            return !(0, fs_1.existsSync)((0, path_1.join)(api.paths.cwd, '.prettierrc'));
        },
        fn: () => __awaiter(void 0, void 0, void 0, function* () {
            // 1、修改 package.json，加上 prettier 和插件
            api.pkg.devDependencies = Object.assign(Object.assign({}, api.pkg.devDependencies), { prettier: '^2', 'prettier-plugin-organize-imports': '^2', 'prettier-plugin-packagejson': '^2' });
            (0, fs_1.writeFileSync)(api.pkgPath, JSON.stringify(api.pkg, null, 2));
            utils_1.logger.info('Write package.json');
            // 2、添加 .prettierrc 和 .prettierignore
            (0, fs_1.writeFileSync)((0, path_1.join)(api.cwd, '.prettierrc'), `
{
  "printWidth": 80,
  "singleQuote": true,
  "trailingComma": "all",
  "proseWrap": "never",
  "overrides": [{ "files": ".prettierrc", "options": { "parser": "json" } }],
  "plugins": ["prettier-plugin-organize-imports", "prettier-plugin-packagejson"]
}
`.trimLeft());
            utils_1.logger.info('Write .prettierrc');
            (0, fs_1.writeFileSync)((0, path_1.join)(api.cwd, '.prettierignore'), `
node_modules
.umi
.umi-production
`.trimLeft());
            utils_1.logger.info('Write .prettierignore');
            // 3、执行 npm install
            const npmClient = api.userConfig.npmClient;
            (0, assert_1.default)(npmClient, `npmClient is required in your config.`);
            (0, utils_1.installWithNpmClient)({
                npmClient,
            });
            utils_1.logger.info(`Install dependencies with ${npmClient}`);
        }),
    });
};
