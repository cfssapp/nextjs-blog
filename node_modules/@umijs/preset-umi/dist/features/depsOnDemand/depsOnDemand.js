"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@umijs/utils");
const fs_1 = require("fs");
const path_1 = require("path");
exports.default = (api) => {
    api.onStart(() => {
        var _a, _b;
        // TODO: 支持在上层框架锁定，比如通过 api.appData.depsOnDemand 添加可选依赖
        const hasSwcConfig = api.config.srcTranspiler === 'swc' || api.config.depTranspiler === 'swc';
        const swcInstalled = ((_a = api.pkg.dependencies) === null || _a === void 0 ? void 0 : _a['@swc/core']) ||
            ((_b = api.pkg.devDependencies) === null || _b === void 0 ? void 0 : _b['@swc/core']);
        if (hasSwcConfig && !swcInstalled) {
            api.logger.info('Since swc is used, install @swc/core on demand.');
            addDeps({
                pkgPath: api.pkgPath || (0, path_1.join)(api.cwd, 'package.json'),
                name: '@swc/core',
                version: `^${require('@umijs/bundler-webpack/package.json').devDependencies['@swc/core']}`,
            });
            (0, utils_1.installWithNpmClient)({
                npmClient: api.appData.npmClient,
                cwd: api.cwd,
            });
        }
    });
};
function addDeps(opts) {
    const pkg = (0, fs_1.existsSync)(opts.pkgPath)
        ? utils_1.fsExtra.readJSONSync(opts.pkgPath)
        : {};
    pkg.devDependencies = pkg.devDependencies || {};
    pkg.devDependencies[opts.name] = opts.version;
    utils_1.fsExtra.writeJSONSync(opts.pkgPath, pkg, { spaces: 2 });
}
