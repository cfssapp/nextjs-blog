"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
exports.default = (api) => {
    api.onCheck(() => __awaiter(void 0, void 0, void 0, function* () {
        // routes
        (0, assert_1.default)(api.appData.routes, `routes not found, you may be run umi on the wrong directory.`);
        yield api.applyPlugins({
            key: 'onChangePkgJSON',
            args: {
                current: api.appData.pkg,
            },
        });
        yield api.applyPlugins({
            key: 'onCheckConfig',
            args: {
                config: api.config,
                userConfig: api.userConfig,
            },
        });
    }));
    api.onCheckCode((args) => {
        // Fixed version import is not allowed
        // e.g. import { X } from '_@ant-design_icons@4.7.0@ant-design/icons'
        if (['cnpm', 'tnpm'].includes(api.appData.npmClient)) {
            args.imports.forEach(({ source }) => {
                if (/@\d/.test(source)) {
                    throw new Error(`${source} is not allowed to import.`);
                }
            });
        }
    });
};
