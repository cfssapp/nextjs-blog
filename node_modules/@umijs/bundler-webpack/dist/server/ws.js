"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createWebSocketServer = void 0;
const utils_1 = require("@umijs/utils");
const ws_1 = __importDefault(require("../../compiled/ws"));
function createWebSocketServer(server) {
    const wss = new ws_1.default.Server({
        noServer: true,
    });
    server.on('upgrade', (req, socket, head) => {
        if (req.headers['sec-websocket-protocol'] === 'webpack-hmr') {
            wss.handleUpgrade(req, socket, head, (ws) => {
                wss.emit('connection', ws, req);
            });
        }
    });
    wss.on('connection', (socket) => {
        socket.send(JSON.stringify({ type: 'connected' }));
    });
    wss.on('error', (e) => {
        if (e.code !== 'EADDRINUSE') {
            console.error(utils_1.chalk.red(`WebSocket server error:\n${e.stack || e.message}`));
        }
    });
    return {
        send(message) {
            wss.clients.forEach((client) => {
                if (client.readyState === ws_1.default.OPEN) {
                    client.send(message);
                }
            });
        },
        wss,
        close() {
            wss.close();
        },
    };
}
exports.createWebSocketServer = createWebSocketServer;
