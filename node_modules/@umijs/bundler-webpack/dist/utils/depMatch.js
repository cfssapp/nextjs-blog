"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.es5ImcompatibleVersionsToPkg = exports.isMatch = exports.cleanCache = void 0;
const utils_1 = require("@umijs/utils");
const path_1 = require("path");
const cache = new Map();
function cleanCache() {
    cache.clear();
}
exports.cleanCache = cleanCache;
function isMatch(opts) {
    // cache by dir, 命中率会更高
    const dir = (0, utils_1.winPath)((0, path_1.dirname)(opts.path));
    if (cache.has(dir)) {
        return !!cache.get(dir);
    }
    else {
        const pkgPath = utils_1.pkgUp.pkgUpSync({ cwd: opts.path });
        let ret;
        if (!pkgPath) {
            ret = false;
        }
        else {
            const { name, version } = require(pkgPath);
            if (opts.pkgs[name]) {
                ret = opts.pkgs[name].some((v) => {
                    return utils_1.semver.satisfies(version, v);
                });
            }
            else {
                ret = false;
            }
        }
        cache.set(dir, ret);
        return ret;
    }
}
exports.isMatch = isMatch;
function es5ImcompatibleVersionsToPkg() {
    const { config: { 'es5-imcompatible-versions': config }, } = require('es5-imcompatible-versions/package.json');
    return Object.keys(config).reduce((memo, key) => {
        memo[key] = /* versions */ Object.keys(config[key]);
        return memo;
    }, {});
}
exports.es5ImcompatibleVersionsToPkg = es5ImcompatibleVersionsToPkg;
