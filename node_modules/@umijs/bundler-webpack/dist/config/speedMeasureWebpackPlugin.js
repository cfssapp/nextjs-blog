"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSpeedMeasureWebpackPlugin = void 0;
// @ts-ignore
const speed_measure_webpack_plugin_1 = __importDefault(require("@umijs/bundler-webpack/compiled/speed-measure-webpack-plugin"));
const path_1 = require("path");
function addSpeedMeasureWebpackPlugin(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        let webpackConfig = opts.webpackConfig;
        if (process.env.SPEED_MEASURE) {
            const smpOption = process.env.SPEED_MEASURE === 'JSON'
                ? {
                    outputFormat: 'json',
                    outputTarget: (0, path_1.join)(process.cwd(), 'SPEED_MEASURE.json'),
                }
                : { outputFormat: 'human', outputTarget: console.log };
            webpackConfig = new speed_measure_webpack_plugin_1.default(smpOption).wrap(webpackConfig);
        }
        return webpackConfig;
    });
}
exports.addSpeedMeasureWebpackPlugin = addSpeedMeasureWebpackPlugin;
