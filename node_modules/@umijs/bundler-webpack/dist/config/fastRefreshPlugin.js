"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addFastRefreshPlugin = void 0;
// @ts-ignore
const lib_1 = __importDefault(require("@pmmmwh/react-refresh-webpack-plugin/lib"));
const constants_1 = require("../constants");
const types_1 = require("../types");
function addFastRefreshPlugin(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const { config, userConfig, name } = opts;
        const isDev = opts.env === types_1.Env.development;
        const useFastRefresh = isDev && userConfig.fastRefresh !== false && name !== constants_1.MFSU_NAME;
        // TODO: Should only run in react csr
        if (useFastRefresh) {
            config
                .plugin('fastRefresh')
                .after('hmr')
                .use(lib_1.default, [{ overlay: false }]);
        }
    });
}
exports.addFastRefreshPlugin = addFastRefreshPlugin;
