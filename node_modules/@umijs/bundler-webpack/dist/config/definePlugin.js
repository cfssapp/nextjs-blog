"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addDefinePlugin = exports.resolveDefine = void 0;
const webpack_1 = require("@umijs/bundler-webpack/compiled/webpack");
const prefixRE = /^UMI_APP_/;
const ENV_SHOULD_PASS = ['NODE_ENV', 'HMR', 'SOCKET_SERVER', 'ERROR_OVERLAY'];
function resolveDefine(opts) {
    const env = {};
    Object.keys(process.env).forEach((key) => {
        if (prefixRE.test(key) || ENV_SHOULD_PASS.includes(key)) {
            env[key] = process.env[key];
        }
    });
    for (const key in env) {
        env[key] = JSON.stringify(env[key]);
    }
    const define = {};
    if (opts.define) {
        for (const key in opts.define) {
            define[key] = JSON.stringify(opts.define[key]);
        }
    }
    return Object.assign({ 'process.env': env }, define);
}
exports.resolveDefine = resolveDefine;
function addDefinePlugin(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const { config, userConfig } = opts;
        config.plugin('define').use(webpack_1.DefinePlugin, [
            resolveDefine({
                define: userConfig.define || {},
            }),
        ]);
    });
}
exports.addDefinePlugin = addDefinePlugin;
