"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addNodePolyfill = void 0;
const webpack_1 = require("@umijs/bundler-webpack/compiled/webpack");
function addNodePolyfill(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const { config } = opts;
        const nodeLibs = require('node-libs-browser');
        config.plugin('node-polyfill-provider').use(webpack_1.ProvidePlugin, [
            {
                Buffer: ['buffer', 'Buffer'],
            },
        ]);
        config.resolve.fallback.merge(Object.assign(Object.assign({}, Object.keys(nodeLibs).reduce((memo, key) => {
            if (nodeLibs[key]) {
                memo[key] = nodeLibs[key];
            }
            else {
                memo[key] = false;
            }
            return memo;
        }, {})), { http: false, https: false }));
    });
}
exports.addNodePolyfill = addNodePolyfill;
