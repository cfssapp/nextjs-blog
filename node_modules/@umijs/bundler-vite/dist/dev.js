"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dev = void 0;
const config_1 = require("./config/config");
const server_1 = require("./server/server");
const types_1 = require("./types");
function dev(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const viteConfig = yield (0, config_1.getConfig)({
            cwd: opts.cwd,
            env: types_1.Env.development,
            entry: opts.entry,
            userConfig: opts.config,
            extraBabelPlugins: [
                ...(opts.beforeBabelPlugins || []),
                ...(opts.extraBabelPlugins || []),
            ],
            extraBabelPresets: [
                ...(opts.beforeBabelPresets || []),
                ...(opts.extraBabelPresets || []),
            ],
            modifyViteConfig: opts.modifyViteConfig,
        });
        yield (0, server_1.createServer)({
            viteConfig,
            userConfig: opts.config,
            cwd: opts.cwd,
            port: opts.port,
            beforeMiddlewares: opts.beforeMiddlewares,
            afterMiddlewares: opts.afterMiddlewares,
            onDevCompileDone: opts.onDevCompileDone,
        });
    });
}
exports.dev = dev;
