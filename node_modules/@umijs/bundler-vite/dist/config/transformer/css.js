"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBrowserlist = void 0;
// refer: https://github.com/umijs/umi-next/blob/867e0c196296efbbdb95203cca35db2fa639808b/packages/bundler-webpack/src/utils/browsersList.ts#L5
function getBrowserlist(targets) {
    return typeof targets.browsers === 'string'
        ? targets.browser
        : Object.keys(targets).map((key) => `${key} >= ${targets[key] === true ? '0' : targets[key]}`);
}
exports.getBrowserlist = getBrowserlist;
/**
 * transform umi css pre-processor configs to vite postcss config
 * @note  include configs:
 *        - postcssLoader
 *        - targets (css only)
 *        - autoprefixer
 *        - extraPostCSSPlugins
 *        - lessLoader
 *        - theme
 */
exports.default = (function css(userConfig) {
    var _a, _b, _c, _d;
    const config = {
        css: { postcss: {}, preprocessorOptions: {} },
    };
    config.css.postcss = Object.assign(Object.assign({}, (((_a = userConfig.postcssLoader) === null || _a === void 0 ? void 0 : _a.postcssOptions) || {})), { plugins: [
            ...(((_c = (_b = userConfig.postcssLoader) === null || _b === void 0 ? void 0 : _b.postcssOptions) === null || _c === void 0 ? void 0 : _c.plugins) || []),
            require('postcss-preset-env')({
                // handle targets for css
                browsers: getBrowserlist(userConfig.targets || {}),
                // handle autoprefixer
                autoprefixer: Object.assign({ flexbox: 'no-2009' }, (userConfig.autoprefixer || {})),
                stage: 3,
            }),
            // handle extraPostCSSPlugins
            ...(userConfig.extraPostCSSPlugins || []),
        ] });
    config.css.preprocessorOptions.less = Object.assign(Object.assign({ javascriptEnabled: true }, (((_d = userConfig.lessLoader) === null || _d === void 0 ? void 0 : _d.lessOptions) || {})), { 
        // handle theme
        modifyVars: userConfig.theme || {} });
    return config;
});
