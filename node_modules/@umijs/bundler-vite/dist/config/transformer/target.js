"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_legacy_1 = __importDefault(require("../../../compiled/@vitejs/plugin-legacy"));
const lite = __importStar(require("../../../compiled/caniuse-lite"));
const css_1 = require("./css");
/**
 * transform umi targets to vite build.target
 */
exports.default = (function target(userConfig) {
    const config = { build: {}, plugins: [] };
    // convert { ie: 11 } to ['ie11']
    if (typeof userConfig.targets === 'object') {
        config.build.target = Object.entries(userConfig.targets)
            .filter(([name]) => {
            // refer: https://esbuild.github.io/api/#target
            return ['chrome', 'edge', 'firefox', 'ios', 'node', 'safari'].includes(name);
        })
            .map(([name, ver]) => `${name}${ver}`);
    }
    const { features, feature: unpackFeature } = lite;
    const { stats } = unpackFeature(features['es6-module']);
    // targets: {} => false
    // targets: { edge: 11 } => true
    // targets: { edge: 20 } => false
    // refer: https://caniuse.com/?search=esm
    function isLegacyBrowser(targets) {
        var _a;
        for (const browserName of Object.keys(targets)) {
            const version = targets[browserName];
            if (version && ((_a = stats[browserName]) === null || _a === void 0 ? void 0 : _a[version]) === 'n') {
                return true;
            }
        }
        return false;
    }
    if (userConfig.targets && isLegacyBrowser(userConfig.targets)) {
        const legacyOpts = {
            targets: (0, css_1.getBrowserlist)(userConfig.targets),
            polyfills: false,
            ignoreBrowserslistConfig: true,
        };
        config.plugins.push((0, plugin_legacy_1.default)(legacyOpts));
    }
    return config;
});
