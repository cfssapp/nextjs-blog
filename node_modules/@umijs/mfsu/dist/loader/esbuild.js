"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.esbuildLoader = void 0;
const es_module_lexer_1 = require("@umijs/bundler-utils/compiled/es-module-lexer");
const esbuild_1 = require("@umijs/bundler-utils/compiled/esbuild");
const path_1 = require("path");
function esbuildTranspiler(source) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
        const done = this.async();
        const options = this.getOptions();
        const { handler = [], implementation } = options, otherOptions = __rest(options, ["handler", "implementation"]);
        const transform = (implementation === null || implementation === void 0 ? void 0 : implementation.transform) || esbuild_1.transform;
        const filePath = this.resourcePath;
        const ext = (0, path_1.extname)(filePath).slice(1);
        const transformOptions = Object.assign(Object.assign({}, otherOptions), { target: (_a = options.target) !== null && _a !== void 0 ? _a : 'es2015', loader: ext !== null && ext !== void 0 ? ext : 'js', sourcemap: this.sourceMap, sourcefile: filePath });
        try {
            let { code, map } = yield transform(source, transformOptions);
            if (handler.length) {
                yield es_module_lexer_1.init;
                handler.forEach((handle) => {
                    const [imports, exports] = (0, es_module_lexer_1.parse)(code);
                    code = handle({ code, imports, exports, filePath });
                });
            }
            done(null, code, map && JSON.parse(map));
        }
        catch (error) {
            done(error);
        }
    });
}
exports.default = esbuildTranspiler;
exports.esbuildLoader = __filename;
