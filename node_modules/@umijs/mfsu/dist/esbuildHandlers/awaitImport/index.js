"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const checkMatch_1 = require("../../babelPlugins/awaitImport/checkMatch");
function getAwaitImportHandler(params) {
    return function awaitImportHandler(opts) {
        var _a, _b;
        let offset = 0;
        let { code } = opts;
        const { filePath, imports } = opts;
        imports.forEach((i) => {
            if (!i.n)
                return;
            const isLazyImport = i.d > 0;
            const from = i.n;
            const { isMatch, replaceValue } = (0, checkMatch_1.checkMatch)({
                cache: params.cache,
                value: from,
                opts: params.opts,
                filename: filePath,
            });
            if (isMatch) {
                // case: import x from './index.ts';
                //       import('./index.ts');
                // import x from '
                // import(
                const preSeg = code.substring(0, i.s + offset);
                // ';
                // );
                const tailSeg = code.substring(i.e + offset);
                const quote = isLazyImport ? '"' : '';
                code = `${preSeg}${quote}${replaceValue}${quote}${tailSeg}`;
                offset += replaceValue.length - from.length;
            }
        });
        if (params.cache.has(filePath)) {
            (_b = (_a = params.opts).onCollect) === null || _b === void 0 ? void 0 : _b.call(_a, {
                file: filePath,
                data: params.cache.get(filePath),
            });
        }
        return code;
    };
}
exports.default = getAwaitImportHandler;
