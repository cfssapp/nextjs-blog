"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const t = __importStar(require("@umijs/bundler-utils/compiled/babel/types"));
function default_1() {
    return {
        visitor: {
            Program(path) {
                let hasExport = false;
                path.node.body.forEach((node) => {
                    if (
                    // esm
                    t.isExportNamedDeclaration(node) ||
                        t.isExportDefaultDeclaration(node) ||
                        t.isExportAllDeclaration(node) ||
                        // cjs
                        (t.isExpressionStatement(node) &&
                            t.isAssignmentExpression(node.expression) &&
                            t.isMemberExpression(node.expression.left) &&
                            // exports.xxx =
                            (t.isIdentifier(node.expression.left.object, {
                                name: 'exports',
                            }) ||
                                // module.exports =
                                (t.isIdentifier(node.expression.left.object, {
                                    name: 'module',
                                }) &&
                                    t.isIdentifier(node.expression.left.property, {
                                        name: 'exports',
                                    }))))) {
                        hasExport = true;
                    }
                });
                if (!hasExport) {
                    path.node.body.push(t.exportNamedDeclaration(t.variableDeclaration('const', [
                        t.variableDeclarator(t.identifier('__mfsu'), t.numericLiteral(1)),
                    ])));
                }
            },
        },
    };
}
exports.default = default_1;
