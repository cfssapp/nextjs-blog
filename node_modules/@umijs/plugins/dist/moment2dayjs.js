"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const plugin_utils_1 = require("umi/plugin-utils");
/*
   As long as moment2dayjs is registered, moment will be replaced by dayjs.
   The presets that can adapt to antd is registered by default.
   When the user configures preset and plugins at the same time, we will merge them.
*/
exports.default = (api) => {
    api.describe({
        key: 'moment2dayjs',
        config: {
            schema(joi) {
                return joi.object({
                    preset: joi.string(),
                    plugins: joi.array(),
                });
            },
        },
        enableBy: api.EnableBy.config,
    });
    const presets = {
        antd: [
            'isSameOrBefore',
            'isSameOrAfter',
            'advancedFormat',
            'customParseFormat',
            'weekday',
            'weekYear',
            'weekOfYear',
            'isMoment',
            'localeData',
            'localizedFormat',
        ],
        antdv3: [
            'isSameOrBefore',
            'isSameOrAfter',
            'advancedFormat',
            'customParseFormat',
            'weekday',
            'weekYear',
            'weekOfYear',
            'isMoment',
            'localeData',
            'localizedFormat',
            'badMutable',
        ],
    };
    const getDayjsPlugins = (api) => {
        let { preset = 'antd', plugins = [] } = api.config.moment2dayjs || {};
        switch (preset) {
            case 'antd':
                return Array.from(new Set(presets['antd'].concat(plugins)));
            case 'antdv3':
                return Array.from(new Set(presets['antdv3'].concat(plugins)));
            case 'none':
                return [].concat(plugins);
            default:
                return [];
        }
    };
    // replace moment
    api.modifyConfig((memo) => {
        memo.alias.moment = (0, path_1.dirname)(require.resolve('dayjs/package.json'));
        return memo;
    });
    api.onGenerateFiles(() => {
        const plugins = getDayjsPlugins(api);
        const runtimeTpl = `
import dayjs from '{{{dayjsPath}}}';
import antdPlugin from '{{{dayjsAntdPluginPath}}}';

{{#plugins}}
import {{.}} from '{{{dayjsPath}}}/plugin/{{.}}';
{{/plugins}}

{{#plugins}}
dayjs.extend({{.}});
{{/plugins}}

dayjs.extend(antdPlugin);
    `;
        const dayjsAntdPluginPath = (0, plugin_utils_1.winPath)(require.resolve('antd-dayjs-webpack-plugin/src/antd-plugin'));
        const dayjsPath = (0, plugin_utils_1.winPath)((0, path_1.dirname)(require.resolve('dayjs/package.json')));
        api.writeTmpFile({
            path: 'runtime.tsx',
            content: plugin_utils_1.Mustache.render(runtimeTpl, {
                plugins,
                dayjsPath,
                dayjsAntdPluginPath,
            }),
        });
    });
    api.addEntryCodeAhead(() => [`import './plugin-moment2dayjs/runtime.tsx'`]);
};
