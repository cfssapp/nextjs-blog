"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDepPath = exports.parseModuleSync = exports.parseModule = void 0;
const es_module_lexer_1 = require("@umijs/bundler-utils/compiled/es-module-lexer");
const esbuild_1 = require("@umijs/bundler-utils/compiled/esbuild");
const utils_1 = require("@umijs/utils");
const path_1 = require("path");
function parseModule(opts) {
    return __awaiter(this, void 0, void 0, function* () {
        yield es_module_lexer_1.init;
        return parseModuleSync(opts);
    });
}
exports.parseModule = parseModule;
function parseModuleSync(opts) {
    let content = opts.content;
    if (opts.path.endsWith('.tsx') || opts.path.endsWith('.jsx')) {
        content = (0, esbuild_1.transformSync)(content, {
            loader: (0, path_1.extname)(opts.path).slice(1),
            format: 'esm',
        }).code;
    }
    return (0, es_module_lexer_1.parse)(content);
}
exports.parseModuleSync = parseModuleSync;
function isDepPath(path) {
    const umiMonorepoPaths = ['umi/packages/', 'umi-next/packages/'];
    return (path.includes('node_modules') ||
        umiMonorepoPaths.some((p) => (0, utils_1.winPath)(path).includes(p)));
}
exports.isDepPath = isDepPath;
